import { type NextPage } from "next";
import { signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import BuskerNavbar from "~/components/BuskerNavbar";
import { api } from "~/utils/api";

interface StreetPerformer {
  name: string;
  time: string;
  location: string;
  image?: string;
}

const performers: StreetPerformer[] = [
  {
    name: "Performer 1",
    time: "10:00 AM - 12:00 PM",
    location: "Main Street",
    image: `/busker-1.jpeg`,
  },
  {
    name: "Performer 2",
    time: "2:00 PM - 4:00 PM",
    location: "Park Avenue",
    image: `/busker-2.jpeg`,
  },
  {
    name: "Performer 3",
    time: "6:00 PM - 8:00 PM",
    location: "Central Square",
    image: `/busker-3.jpeg`,
  },
];

const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Buskers</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen bg-gray-100">
        <Navbar />
        <div className="mx-auto max-w-7xl px-4 py-10 sm:px-6 lg:px-8">
          <h1 className="mb-6 text-3xl font-bold text-gray-800">
            Welcome to the Street Performers Page
          </h1>
          <div>
            <h2 className="mb-4 text-2xl font-bold text-gray-800">
              Live Street Performers
            </h2>
            <ul>
              {performers.map((performer, index) => (
                <li key={index} className="mb-4 rounded-lg bg-white p-6 shadow">
                  <div className="flex gap-8">
                    {performer.image && (
                      <>
                        <div className="relative h-[200px] w-[200px]">
                          <Image
                            src={performer.image}
                            alt={performer.name}
                            style={{ objectFit: "cover" }}
                            fill
                            className="rounded-lg"
                          />
                        </div>
                      </>
                    )}
                    <div>
                      <h3 className="text-xl font-semibold text-gray-800">
                        {performer.name}
                      </h3>
                      <p className="text-gray-600">Time: {performer.time}</p>
                      <p className="text-gray-600">
                        Location: {performer.location}
                      </p>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          </div>
        </div>
      </div>
    </>
  );
};

const Navbar: React.FC = () => {
  const { data: session } = useSession();
  const isUserABusker = api.buskers.isABusker.useQuery({
    id: session?.user.id,
  });

  return (
    <nav className="bg-gray-800 py-4">
      <ul className="flex justify-center space-x-4">
        {isUserABusker.data ? (
          <BuskerNavbar />
        ) : (
          <>
            {!session && (
              <>
                <li>
                  <Link
                    href="/login"
                    className="rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:text-white"
                  >
                    Login
                  </Link>
                </li>
                <li>
                  <Link
                    href="/signup"
                    className="rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:text-white"
                  >
                    Sign Up
                  </Link>
                </li>
              </>
            )}
            <li>
              <Link
                href="/become-busker"
                className="rounded-md px-3 py-2 text-sm font-medium text-gray-300 hover:text-white"
              >
                Become a Busker
              </Link>
            </li>
            {session && (
              <li>
                <button
                  className="rounded-md text-sm font-medium text-gray-300 hover:text-white"
                  onClick={() => void signOut()}
                >
                  Log out
                </button>
              </li>
            )}
          </>
        )}
      </ul>
    </nav>
  );
};

export default Home;
